version: 2.1
jobs:
  build:
    docker:
      - image: node:alpine
    working_directory: ~/repo
    steps:
      - run:
          command: |
            apk add --no-cache ca-certificates
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          command: |
            yarn install
            yarn build
            echo $CIRCLE_TAG

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist
            - package.json

            - Dockerfile

  publish pre-realse docker:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t leezzxuan/gql:$CIRCLE_SHA1 .
            docker push leezzxuan/gql:$CIRCLE_SHA1

  publish docker:
    machine: true
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t leezzxuan/gql:$CIRCLE_TAG .
            docker push leezzxuan/gql:$CIRCLE_TAG

  restart service:
    machine: true
    steps:
      - run:
          command: |
            cat << 'EOF' > docker-compose.yml
              version: "3.7"
              services:
                nodejs:
                  image: leezzxuan/gql:$CIRCLE_TAG
                  restart: always
                  tty: true
                  container_name: graphql-node
                  depends_on:
                    - pgsql
                  links:
                    - pgsql
                  environment:
                    - PGUSER=postgres
                    - PGHOST=pgsql
                    - PGDATABASE=cloud
                    - PRIVATE_TOKEN_KEY=1asdqwdqwdqqw
                  ports:
                    - 127.0.0.1:4500:80
                pgsql:
                  image: postgres:alpine
                  restart: always
                  container_name: pgsql
                  volumes:
                    - /etc/postgres:/var/lib/postgresql/data
                  ports:
                    - 127.0.0.1:5432:5432
            EOF 
            cat docker-compose.yml | ssh root@47.104.180.119 "docker-compose -f - up -d"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - publish pre-realse docker:
          requires:
            - build
          filters:
            branches:
              only: /pre-realse/
      - publish docker:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - restart service:
          requires:
            - publish pre-realse docker
