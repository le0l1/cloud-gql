"用户"
type User {
  "用户id"
  id: ID
  "用户姓名"
  name: String
  "用户手机号"
  phone: Number
  "汽修厂名称"
  garage: String
  "订货城市"
  city: String
  "地区"
  area: String
  "详细地址"
  address: String
}

"用户注册输入"
input UserRegisterInput {
  "用户姓名"
  name: String
  "用户手机号"
  phone: Number!
  "用户密码"
  password: String!
  "汽修厂名称"
  garage: String
  "订货城市"
  city: String
  "地区"
  area: String
  "详细地址"
  address: String
}

"用户登录输入"
input UserLoginInput {
  "用户手机号"
  phone: Number!
  "用户密码"
  password: String!
}

"用户查询输入"
input UserQueryInput {
  "分页id"
  after: ID
  "分页条数"
  first: Int
  "模糊查询文本"
  tsQuery: String
}

"用户注册返回"
type UserRegisterResult {
  "用户id"
  id: ID!
}

"用户登陆返回"
type UserLoginResult {
  "用户id"
  id: ID
  "用户姓名"
  name: String
  "用户手机号"
  phone: Number
  "用户地址"
  address: String
  "用户登陆凭证"
  token: String
}

"用户删除"
input UserDeleteInput {
  "指定删除用户id"
  id: ID!
}


"删除用户返回"
type UserDeleteResult {
  "被删除id"
  id: ID!
  "删除结果"
  status: Boolean
}

type UserEdge {
  cursor: String!
  node: User
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge!]
}

extend type Query {
  user(userQueryInput: UserQueryInput!): UserConnection! @auth
}

extend type Mutation {
  "用户注册"
  register(userRegisterInput: UserRegisterInput!): UserRegisterResult!
  "用户登录"
  loginIn(userLoginInput: UserLoginInput!): UserLoginResult!
  "用户删除"
  deleteUser(userDeleteInput: UserDeleteInput!): UserDeleteResult! @auth
}
