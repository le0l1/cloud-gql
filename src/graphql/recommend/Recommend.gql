"推荐类型"
type Recommend implements Node {
  "推荐id"
  id: ID!
  "推荐的类型"
  type: RecommendType
  "推荐对应的路径"
  path: String
  "推荐的节点"
  recommendNode: Node
}

"推荐集合"
type RecommendConnection implements Connection {
  pageInfo: PageInfo!
  edges: [Recommend!]
}

"推荐类型"
enum RecommendType {
  "商户"
  SHOP
  "商品"
  GOOD
}

"创建推荐输入"
input RecommendCreateInput {
  "推荐列表对应的路由"
  path: String!
  "推荐类型"
  type: RecommendType!
  "推荐的id"
  recommendNodeId: ID!
}

"查询推荐输入"
input RecommendSearchInput {
  "推荐类型"
  type: RecommendType!
  "推荐列表对应路径"
  path: String!
}

"更新推荐输入"
input RecommendUpdateInput {
  "推荐id"
  id: ID!
  "推荐列表对应的路由"
  path: String!
  "推荐类型"
  type: RecommendType!
  "推荐的id"
  recommendNodeId: ID!
}

"创建推荐返回"
type RecommendActionResult {
  id: ID
  status: Boolean
}

"删除推荐输入"
input RecommendDeleteInput {
  id: ID!
}

extend type Query {
  "推荐列表查询"
  recommends(searchRecommendInput: RecommendSearchInput!): RecommendConnection!
}

extend type Mutation {
  "创建推荐"
  createRecommend(
    createRecommendInput: RecommendCreateInput!
  ): RecommendActionResult
  "更新推荐"
  updateRecommend(
    updateRecommendInput: RecommendUpdateInput!
  ): RecommendActionResult
  "删除推荐"
  deleteRecommend(
    deleteRecommendInput: RecommendDeleteInput!
  ): RecommendActionResult
}
