"生意圈"
type BusinessCircle implements Node {
  "生意圈id"
  id: ID!

  "发布者名称"
  user: User

  "发布时间"
  publishAt: Date

  "发布信息"
  content: String

  "发布图片"
  images: [String!]

  "点赞数"
  starCount: Int

  "评论数"
  commentCount: Int

  "举报状态"
  reportStatus: ReportStatus
}


"举报状态枚举"
enum ReportStatus {
  "已被举报"
  IS_REPORTED
  "未被举报"
  IS_NOT_REPORT
}

"生意圈排序条件"
enum SORTCONDITION {
  "点赞数排序"
  STARCOUNT
  "发布时间排序"
  PUBLISHDATE
}


input BusinessCircleSearchInput {
  "偏离值"
  offset: Int
  "分页条数"
  limit: Int

  "举报状态"
  reportStatus: ReportStatus
}

"生意圈列表"
type BusinessCircleConnection implements Connection {
  pageInfo: PageInfo
  edges: [Node!]
}

input BusinessCircleCreateInput {
  "用户id(不是商户id)"
  userId: ID!

  "内容"
  content: String
  
  "图片"
  images: [String!]
}
input BusinessCircleDeleteInput {
  id: ID!
}

input BusinessCircleStarInput {
  id: ID!
}
input BusinessCircleReportInput {
  id: ID!
}

type BusinessCircleOperationResult {
  "操作id"
  id: ID

  "操作结果"
  status: Boolean
}

extend type Query {
  "生意圈查询"
  businessCircles(
    query: BusinessCircleSearchInput
  ): BusinessCircleConnection
}

extend type Mutation {
  "创建生意圈"
  createBusinessCircle(createBusinessCircleInput: BusinessCircleCreateInput!): BusinessCircleOperationResult
  "删除生意圈"
  deleteBusinessCircle(deleteBusinessCircleInput: BusinessCircleDeleteInput!):BusinessCircleOperationResult
  "点赞生意圈"
  starBusinessCircle(starBusinessCircleInput: BusinessCircleStarInput!): BusinessCircleOperationResult
  "举报生意圈"
  reportBusinessCircle(reportBusinessCircleInput: BusinessCircleReportInput!): BusinessCircleOperationResult
}
