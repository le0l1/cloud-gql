"商品"
type Good implements Node {
  "商品id"
  id: ID!

  "商品名称"
  name: String

  "商品封面"
  cover: String

  "商品描述"
  description: String

  "商户id"
  shopId: ID

  "商品状态"
  status: GOODSTATUS

  "商品副标题"
  subTitle: String

  "商品参数"
  goodParamter: String

  "商品销量"
  goodsSales: Int

  "商品库存"
  goodsStocks: Int

  "商品销售价格"
  goodSalePrice: Float
}

"商品状态枚举"
enum GOODSTATUS {
  "在线"
  ONLINE
  "下线"
  OFFLINE
}

"商品列表"
type Goods {
  "商品列表"
  goods: [Good!]

  "每页数量"
  pageSize: Int

  "页数"
  page: Int

  "总页数量"
  total: Int
}
"商品操作结果"
type GoodActionResult {
  "操作的商品id"
  id: ID
  "操作状态"
  status: Boolean
}

input GoodCreateInput {
  "商品名称"
  name: String

  "商品图片"
  images: [String]

  "商品描述"
  description: String

  "商户id"
  shopId: ID!

  "商品状态"
  status: GOODSTATUS

  "商品副标题"
  subTitle: String

  "商品参数"
  goodParamter: String

  "商品销量"
  goodsSales: Int

  "商品库存"
  goodsStocks: Int

  "商品销售价格"
  goodSalePrice: Float
}

input GoodUpdateInput {
  "商品id"
  id: ID!

  "商品名称"
  name: String

  "商品描述"
  description: String

  "商户id"
  shopId: ID

  "商品状态"
  status: GOODSTATUS

  "商品副标题"
  subTitle: String

  "商品参数"
  goodParamter: String

  "商品销量"
  goodsSales: Int

  "商品库存"
  goodsStocks: Int

  "商品销售价格"
  goodSalePrice: Float
}

input GoodDeleteInput {
  "商品id"
  id: ID!
}

input GoodSearchInput {
  "商品id"
  id: ID!
}

input GoodsSearchInput {
  "商户id"
  shopId: ID!
  "偏离值"
  offset: Int
  "分页条数"
  limit: Int
}

type GoodConnection implements Connection {
  pageInfo: PageInfo
  edges: [Node!]
}

extend type Query {
  "商品查询 可通过商品id、名称进行查询"
  good(query: GoodSearchInput!): Good
  "商品列表查询"
  goods(query: GoodsSearchInput!): GoodConnection
}

extend type Mutation {
  "创建商品"
  createGood(createGoodInput: GoodCreateInput!): GoodActionResult
  "更新商品"
  updateGood(updateGoodInput: GoodUpdateInput!): GoodActionResult
  "删除商品"
  deleteGood(deleteGoodInput: GoodDeleteInput!): GoodActionResult
}
