"商户"
type Shop implements Node {
  "商户id"
  id: ID!
  "商户名称"
  name: String
  "商户QQ"
  qqchat: Number
  "商户微信"
  wechat: String
  "商户电话"
  phone: [Number!]
  "商户介绍"
  description: String
  "商户状态"
  status: ShopStatus
  "商户审核状态"
  isPassed: Boolean
  "商户的用户id 可用于查询商户的用户信息"
  belongto: ID!
  "主营业务"
  coreBusiness: [Category!]
  "商家地址"
  address: String
  "商家地区"
  area: String
  "商家所在城市"
  city: String
  "商户封面"
  cover: String
}

enum ShopStatus {
  "正常"
  NORMAL
  "暂停营业"
  SUSPEND
}

input ShopQueryFilter {
  status: ShopStatus
}

"商户查询"
input ShopsQueryInput {
  "模糊查询"
  tsQuery: String
  "筛选条件"
  filter: ShopQueryFilter
  "页面size"
  limit: Int
  "页数"
  offset: Int
  "商户审核状态"
  isPassed: Boolean
}

input ShopQueryInput {
  "商户id"
  id: ID
}

"创建商户输入"
input ShopCreateInput {
  "商户名称"
  name: String
  "商户QQ"
  qqchat: Number
  "商户微信"
  wechat: String
  "商户电话"
  phone: [Number!]
  "商户介绍"
  description: String
  "商户状态"
  status: ShopStatus
  "商家id"
  belongto: ID!
  "主营业务"
  coreBusiness: [ID!]
  "商家地址"
  address: String
  "商家地区"
  area: String
  "商家所在城市"
  city: String
  "商户相册"
  shopBanners: [String!]
}

"删除商户输入"
input ShopDeleteInput {
  id: ID!
}

"更新商户输入"
input ShopUpdateInput {
  id: ID!
  "商户名称"
  name: String
  "商户QQ"
  qqchat: Number
  "商户微信"
  wechat: String
  "商户电话"
  phone: [Number!]
  "商户介绍"
  description: String
  "商户状态"
  status: ShopStatus
  "商户审核状态"
  isPassed: Boolean
  "主营业务"
  coreBusiness: [ID!]
  "商家地址"
  address: String
}

"商户列表"
type ShopConnection implements Connection {
  pageInfo: PageInfo
  edges: [Shop!]
}

"商户创建结果"
type ShopResult {
  id: ID!
  status: Boolean
}

extend type Query {
  "商户列表查询 支持模糊查询 筛选条件"
  shops(query: ShopsQueryInput): ShopConnection! @auth
  "单一商户查询"
  shop(query: ShopQueryInput): Shop!
}

extend type Mutation {
  "创建商户"
  createShop(shopCreateInput: ShopCreateInput!): ShopResult!
  "删除商户"
  deleteShop(shopDeleteInput: ShopDeleteInput!): ShopResult!
    @auth(requires: ROOT)
  "更新商户信息"
  updateShop(shopUpdateInput: ShopUpdateInput!): ShopResult!
    @auth(requires: MERCHANT)
}
