type Order implements Node {
  id: ID!
  "订单号"
  orderNumber: String
  "订单总金额"
  totalCount: String
  "订单商品"
  orderDetail: [OrderDetail!]
  "订单减免金额"
  discount: Number
  "订单状态"
  status: OrderStatus
  "支付过期时间"
  payExpiredAt: String
  "创建时间"
  createdAt: String
  "更新时间"
  updatedAt: String
}

enum OrderStatus {
  "待付款"
  PENDING
  "待发货"
  WAIT_SHIP
  "待收货"
  WAIT_RECEIPT
  "待评价"
  WAIT_EVALUATION
  "已取消"
  CANCELED
  "待退款"
  WAIT_REFUND
  "异常"
  UNUSUAL 
  "已完成"
  COMPLETE
}

type OrderActionResult {
  id: ID
  status: Boolean
}

type OrderDetail {
  "商户id"
  shopId: ID!
  
  "商品id"
  goodId: ID!

  "商品名称"
  goodName: String!
  
  "商品封面"
  goodCover: String!

  "商品销售价格"
  goodSalePrice: Float!

  "商品数量"
  quantity: Int!
}

input OrderGood {
  "商品id"
  goodId: ID!
  "商品数量"
  quantity: Int!
}

input OrderItem {
  goodArr: [OrderGood!]!
  couponId: ID
}

input CreateOrderInput {
  "用户id"
  userId: ID!
  "收货地址id"
  addressId: ID!
  "商品数组"
  orderItems: [OrderItem!]!
}

input UpdateOrderInput {
  id: ID!
  status: OrderStatus!
  "描述 如退款原因等等"
  description: String
}

input DeleteOrder {
  id: ID!
}

input OrderQuery {
  "页面size"
  limit: Int
  "页数"
  offset: Int

  "用户id"
  userId: ID

  "商户id"
  shopId: ID

  "订单状态"
  status: OrderStatus
}

input PayOrderInput {
  "订单id"
  id: ID!
  "支付方式"
  paymentMethod: PAYMENTMETHOD!
}

input OrderLogQuery{
  id: ID!
  "根据状态筛选对应的log 若需要退货原因 传入WAIT_REFUND"
  newStatus: OrderStatus 
}

type OrderConnection implements Connection {
  pageInfo: PageInfo
  edges: [Order!]
}

type OrderPayprepare {
  orderNumber: String
  totalCount: String
  payPrepare: WXPayPrepare
}

type OrderLog {
  oldStatus: String
  newStatus: String
  description: String
}

extend type Mutation {
  "创建订单"
  createOrder(createOrderInput: CreateOrderInput!): Order
  "支付订单"
  payOrder(payOrderInput: PayOrderInput!): WXPayPrepare
  "更新订单"
  updateOrder(updateOrderInput: UpdateOrderInput!): OrderActionResult
  "删除订单"
  deleteOrder(id: ID!): OrderActionResult
  "订单退款"
  refundOrder(id: ID!): OrderActionResult
}

extend type Query {
  "查询订单列表"
  orders(query: OrderQuery!): OrderConnection
  "查询单一订单"
  order(id: ID!): Order
  "查询订单状态日志"
  orderLog(query: OrderLogQuery!): [OrderLog!]
}