type Order implements Node {
  id: ID!
  "订单总金额"
  total: String
  "订单商品"
  goods: [Good]
  "订单减免金额"
  discount: Number
  "订单状态"
  orderStatus: OrderStatus
}

enum OrderStatus {
  S
}

input OrderGood {
  "商品id"
  goodId: ID!
  "商品数量"
  quantity: Int!
}

input CreateOrderInput {
  "用户id"
  userId: ID!
  "收货地址id"
  addressId: ID!
  "商品数组"
  goodArr: [OrderGood!]!
  "优惠劵id数组"
  couponIds: [ID!]
  "支付方式"
  paymentMethod: PAYMENTMETHOD
}

extend type Mutation {
  "创建订单"
  createOrder(createOrderInput: CreateOrderInput): WXPayPrepare
}