union Collection = Shop | Good


type CollectionActionResult {
  status: Boolean
}

input CreateCollectionInput {
  userId: ID!
  typeId: ID!
}

input DeleteCollectionInput {
  userId: ID!
  typeId: ID!
}

enum CollectionType {
  shop
  good
}

input CollectionsQuery {
  userId: ID!
  type: CollectionType!
  "页面size"
  limit: Int
  "页数"
  offset: Int
}

input CollectedQuery {
  userId: ID!
  typeId: ID!
}

extend type Query {
  collections(query: CollectionsQuery!): [Collection]
  collected(query: CollectedQuery!): Boolean
}

extend type Mutation {
  "目前仅支持店铺和商品收藏"
  createCollection(createCollectionInput: CreateCollectionInput!): CollectionActionResult
  deleteCollection(deleteCollectionInput: DeleteCollectionInput!): CollectionActionResult
}
